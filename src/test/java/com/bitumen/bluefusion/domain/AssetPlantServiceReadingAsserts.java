package com.bitumen.bluefusion.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AssetPlantServiceReadingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetPlantServiceReadingAllPropertiesEquals(
        AssetPlantServiceReading expected,
        AssetPlantServiceReading actual
    ) {
        assertAssetPlantServiceReadingAutoGeneratedPropertiesEquals(expected, actual);
        assertAssetPlantServiceReadingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetPlantServiceReadingAllUpdatablePropertiesEquals(
        AssetPlantServiceReading expected,
        AssetPlantServiceReading actual
    ) {
        assertAssetPlantServiceReadingUpdatableFieldsEquals(expected, actual);
        assertAssetPlantServiceReadingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetPlantServiceReadingAutoGeneratedPropertiesEquals(
        AssetPlantServiceReading expected,
        AssetPlantServiceReading actual
    ) {
        assertThat(actual)
            .as("Verify AssetPlantServiceReading auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetPlantServiceReadingUpdatableFieldsEquals(
        AssetPlantServiceReading expected,
        AssetPlantServiceReading actual
    ) {
        assertThat(actual)
            .as("Verify AssetPlantServiceReading relevant properties")
            .satisfies(a ->
                assertThat(a.getAssetPlantServiceReadingId())
                    .as("check assetPlantServiceReadingId")
                    .isEqualTo(expected.getAssetPlantServiceReadingId())
            )
            .satisfies(a -> assertThat(a.getAssetPlantId()).as("check assetPlantId").isEqualTo(expected.getAssetPlantId()))
            .satisfies(a ->
                assertThat(a.getNextServiceSmrReading()).as("check nextServiceSmrReading").isEqualTo(expected.getNextServiceSmrReading())
            )
            .satisfies(a ->
                assertThat(a.getEstimatedUnitsPerDay()).as("check estimatedUnitsPerDay").isEqualTo(expected.getEstimatedUnitsPerDay())
            )
            .satisfies(a ->
                assertThat(a.getEstimatedNextServiceDate())
                    .as("check estimatedNextServiceDate")
                    .isEqualTo(expected.getEstimatedNextServiceDate())
            )
            .satisfies(a -> assertThat(a.getLatestSmrReadings()).as("check latestSmrReadings").isEqualTo(expected.getLatestSmrReadings()))
            .satisfies(a -> assertThat(a.getServiceInterval()).as("check serviceInterval").isEqualTo(expected.getServiceInterval()))
            .satisfies(a -> assertThat(a.getLastServiceDate()).as("check lastServiceDate").isEqualTo(expected.getLastServiceDate()))
            .satisfies(a -> assertThat(a.getLatestSmrDate()).as("check latestSmrDate").isEqualTo(expected.getLatestSmrDate()))
            .satisfies(a -> assertThat(a.getLastServiceSmr()).as("check lastServiceSmr").isEqualTo(expected.getLastServiceSmr()))
            .satisfies(a -> assertThat(a.getServiceUnit()).as("check serviceUnit").isEqualTo(expected.getServiceUnit()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetPlantServiceReadingUpdatableRelationshipsEquals(
        AssetPlantServiceReading expected,
        AssetPlantServiceReading actual
    ) {
        // empty method
    }
}
