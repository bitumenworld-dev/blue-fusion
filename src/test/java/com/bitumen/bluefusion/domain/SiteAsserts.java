package com.bitumen.bluefusion.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SiteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteAllPropertiesEquals(Site expected, Site actual) {
        assertSiteAutoGeneratedPropertiesEquals(expected, actual);
        assertSiteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteAllUpdatablePropertiesEquals(Site expected, Site actual) {
        assertSiteUpdatableFieldsEquals(expected, actual);
        assertSiteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteAutoGeneratedPropertiesEquals(Site expected, Site actual) {
        assertThat(actual)
            .as("Verify Site auto generated properties")
            .satisfies(a -> assertThat(a.getSiteId()).as("check id").isEqualTo(expected.getSiteId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteUpdatableFieldsEquals(Site expected, Site actual) {
        assertThat(actual)
            .as("Verify Site relevant properties")
            .satisfies(a -> assertThat(a.getSiteId()).as("check siteId").isEqualTo(expected.getSiteId()))
            .satisfies(a -> assertThat(a.getSiteName()).as("check siteName").isEqualTo(expected.getSiteName()))
            .satisfies(a -> assertThat(a.getLatitude()).as("check latitude").isEqualTo(expected.getLatitude()))
            .satisfies(a -> assertThat(a.getLongitude()).as("check longitude").isEqualTo(expected.getLongitude()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()))
            .satisfies(a -> assertThat(a.getSiteNotes()).as("check siteNotes").isEqualTo(expected.getSiteNotes()))
            .satisfies(a -> assertThat(a.getSiteImage()).as("check siteImageUrl").isEqualTo(expected.getSiteImage()))
            .satisfies(a -> assertThat(a.getCompany()).as("check companyId").isEqualTo(expected.getCompany()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteUpdatableRelationshipsEquals(Site expected, Site actual) {
        // empty method
    }
}
