package com.bitumen.bluefusion.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FuelTransactionTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelTransactionTypeAllPropertiesEquals(FuelTransactionType expected, FuelTransactionType actual) {
        assertFuelTransactionTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertFuelTransactionTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelTransactionTypeAllUpdatablePropertiesEquals(FuelTransactionType expected, FuelTransactionType actual) {
        assertFuelTransactionTypeUpdatableFieldsEquals(expected, actual);
        assertFuelTransactionTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelTransactionTypeAutoGeneratedPropertiesEquals(FuelTransactionType expected, FuelTransactionType actual) {
        assertThat(actual)
            .as("Verify FuelTransactionType auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelTransactionTypeUpdatableFieldsEquals(FuelTransactionType expected, FuelTransactionType actual) {
        assertThat(actual)
            .as("Verify FuelTransactionType relevant properties")
            .satisfies(a ->
                assertThat(a.getFuelTransactionTypeId()).as("check fuelTransactionTypeId").isEqualTo(expected.getFuelTransactionTypeId())
            )
            .satisfies(a ->
                assertThat(a.getFuelTransactionType()).as("check fuelTransactionType").isEqualTo(expected.getFuelTransactionType())
            )
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelTransactionTypeUpdatableRelationshipsEquals(FuelTransactionType expected, FuelTransactionType actual) {
        // empty method
    }
}
