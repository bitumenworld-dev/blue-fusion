package com.bitumen.bluefusion.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FuelPumpAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelPumpAllPropertiesEquals(FuelPump expected, FuelPump actual) {
        assertFuelPumpAutoGeneratedPropertiesEquals(expected, actual);
        assertFuelPumpAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelPumpAllUpdatablePropertiesEquals(FuelPump expected, FuelPump actual) {
        assertFuelPumpUpdatableFieldsEquals(expected, actual);
        assertFuelPumpUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelPumpAutoGeneratedPropertiesEquals(FuelPump expected, FuelPump actual) {
        assertThat(actual)
            .as("Verify FuelPump auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelPumpUpdatableFieldsEquals(FuelPump expected, FuelPump actual) {
        assertThat(actual)
            .as("Verify FuelPump relevant properties")
            .satisfies(a -> assertThat(a.getFuelPumpId()).as("check fuelPumpId").isEqualTo(expected.getFuelPumpId()))
            .satisfies(a -> assertThat(a.getFuelPumpNumber()).as("check fuelPumpNumber").isEqualTo(expected.getFuelPumpNumber()))
            .satisfies(a ->
                assertThat(a.getCurrentStorageUnitId()).as("check currentStorageUnitId").isEqualTo(expected.getCurrentStorageUnitId())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelPumpUpdatableRelationshipsEquals(FuelPump expected, FuelPump actual) {
        // empty method
    }
}
