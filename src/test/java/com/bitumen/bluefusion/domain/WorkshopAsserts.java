package com.bitumen.bluefusion.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WorkshopAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopAllPropertiesEquals(Workshop expected, Workshop actual) {
        assertWorkshopAutoGeneratedPropertiesEquals(expected, actual);
        assertWorkshopAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopAllUpdatablePropertiesEquals(Workshop expected, Workshop actual) {
        assertWorkshopUpdatableFieldsEquals(expected, actual);
        assertWorkshopUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopAutoGeneratedPropertiesEquals(Workshop expected, Workshop actual) {
        assertThat(actual)
            .as("Verify Workshop auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopUpdatableFieldsEquals(Workshop expected, Workshop actual) {
        assertThat(actual)
            .as("Verify Workshop relevant properties")
            .satisfies(a -> assertThat(a.getWorkshopId()).as("check workshopId").isEqualTo(expected.getWorkshopId()))
            .satisfies(a -> assertThat(a.getSiteId()).as("check siteId").isEqualTo(expected.getSiteId()))
            .satisfies(a -> assertThat(a.getWorkshopName()).as("check workshopName").isEqualTo(expected.getWorkshopName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopUpdatableRelationshipsEquals(Workshop expected, Workshop actual) {
        // empty method
    }
}
