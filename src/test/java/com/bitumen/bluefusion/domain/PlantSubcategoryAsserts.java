package com.bitumen.bluefusion.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PlantSubcategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlantSubcategoryAllPropertiesEquals(PlantSubcategory expected, PlantSubcategory actual) {
        assertPlantSubcategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertPlantSubcategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlantSubcategoryAllUpdatablePropertiesEquals(PlantSubcategory expected, PlantSubcategory actual) {
        assertPlantSubcategoryUpdatableFieldsEquals(expected, actual);
        assertPlantSubcategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlantSubcategoryAutoGeneratedPropertiesEquals(PlantSubcategory expected, PlantSubcategory actual) {
        assertThat(actual)
            .as("Verify PlantSubcategory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlantSubcategoryUpdatableFieldsEquals(PlantSubcategory expected, PlantSubcategory actual) {
        assertThat(actual)
            .as("Verify PlantSubcategory relevant properties")
            .satisfies(a -> assertThat(a.getPlantSubcategoryId()).as("check plantSubcategoryId").isEqualTo(expected.getPlantSubcategoryId())
            )
            .satisfies(a ->
                assertThat(a.getPlantSubcategoryCode()).as("check plantSubcategoryCode").isEqualTo(expected.getPlantSubcategoryCode())
            )
            .satisfies(a ->
                assertThat(a.getPlantSubcategoryName()).as("check plantSubcategoryName").isEqualTo(expected.getPlantSubcategoryName())
            )
            .satisfies(a ->
                assertThat(a.getPlantSubcategoryDescription())
                    .as("check plantSubcategoryDescription")
                    .isEqualTo(expected.getPlantSubcategoryDescription())
            )
            .satisfies(a -> assertThat(a.getIsAudited()).as("check isAudited").isEqualTo(expected.getIsAudited()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlantSubcategoryUpdatableRelationshipsEquals(PlantSubcategory expected, PlantSubcategory actual) {
        // empty method
    }
}
