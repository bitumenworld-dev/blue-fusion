package com.bitumen.bluefusion.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PlantCategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlantCategoryAllPropertiesEquals(PlantCategory expected, PlantCategory actual) {
        assertPlantCategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertPlantCategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlantCategoryAllUpdatablePropertiesEquals(PlantCategory expected, PlantCategory actual) {
        assertPlantCategoryUpdatableFieldsEquals(expected, actual);
        assertPlantCategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlantCategoryAutoGeneratedPropertiesEquals(PlantCategory expected, PlantCategory actual) {
        assertThat(actual)
            .as("Verify PlantCategory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlantCategoryUpdatableFieldsEquals(PlantCategory expected, PlantCategory actual) {
        assertThat(actual)
            .as("Verify PlantCategory relevant properties")
            .satisfies(a -> assertThat(a.getPlantCategoryId()).as("check plantCategoryId").isEqualTo(expected.getPlantCategoryId()))
            .satisfies(a -> assertThat(a.getPlantCategoryCode()).as("check plantCategoryCode").isEqualTo(expected.getPlantCategoryCode()))
            .satisfies(a -> assertThat(a.getPlantCategoryName()).as("check plantCategoryName").isEqualTo(expected.getPlantCategoryName()))
            .satisfies(a ->
                assertThat(a.getPlantCategoryDescription())
                    .as("check plantCategoryDescription")
                    .isEqualTo(expected.getPlantCategoryDescription())
            )
            .satisfies(a -> assertThat(a.getIsAudited()).as("check isAudited").isEqualTo(expected.getIsAudited()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlantCategoryUpdatableRelationshipsEquals(PlantCategory expected, PlantCategory actual) {
        // empty method
    }
}
