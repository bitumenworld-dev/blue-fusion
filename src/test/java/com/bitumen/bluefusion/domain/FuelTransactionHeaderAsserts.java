package com.bitumen.bluefusion.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FuelTransactionHeaderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelTransactionHeaderAllPropertiesEquals(FuelTransactionHeader expected, FuelTransactionHeader actual) {
        assertFuelTransactionHeaderAutoGeneratedPropertiesEquals(expected, actual);
        assertFuelTransactionHeaderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelTransactionHeaderAllUpdatablePropertiesEquals(
        FuelTransactionHeader expected,
        FuelTransactionHeader actual
    ) {
        assertFuelTransactionHeaderUpdatableFieldsEquals(expected, actual);
        assertFuelTransactionHeaderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelTransactionHeaderAutoGeneratedPropertiesEquals(
        FuelTransactionHeader expected,
        FuelTransactionHeader actual
    ) {
        assertThat(actual)
            .as("Verify FuelTransactionHeader auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelTransactionHeaderUpdatableFieldsEquals(FuelTransactionHeader expected, FuelTransactionHeader actual) {
        assertThat(actual)
            .as("Verify FuelTransactionHeader relevant properties")
            .satisfies(a ->
                assertThat(a.getFuelTransactionHeaderId())
                    .as("check fuelTransactionHeaderId")
                    .isEqualTo(expected.getFuelTransactionHeaderId())
            )
            .satisfies(a -> assertThat(a.getCompanyId()).as("check companyId").isEqualTo(expected.getCompanyId()))
            .satisfies(a -> assertThat(a.getSupplierId()).as("check supplierId").isEqualTo(expected.getSupplierId()))
            .satisfies(a -> assertThat(a.getTransactionTypeId()).as("check transactionTypeId").isEqualTo(expected.getTransactionTypeId()))
            .satisfies(a -> assertThat(a.getFuelType()).as("check fuelType").isEqualTo(expected.getFuelType()))
            .satisfies(a -> assertThat(a.getOrderNumber()).as("check orderNumber").isEqualTo(expected.getOrderNumber()))
            .satisfies(a -> assertThat(a.getDeliveryNote()).as("check deliveryNote").isEqualTo(expected.getDeliveryNote()))
            .satisfies(a -> assertThat(a.getGrvNumber()).as("check grvNumber").isEqualTo(expected.getGrvNumber()))
            .satisfies(a -> assertThat(a.getInvoiceNumber()).as("check invoiceNumber").isEqualTo(expected.getInvoiceNumber()))
            .satisfies(a -> assertThat(a.getPricePerLitre()).as("check pricePerLitre").isEqualTo(expected.getPricePerLitre()))
            .satisfies(a -> assertThat(a.getNote()).as("check note").isEqualTo(expected.getNote()))
            .satisfies(a -> assertThat(a.getRegistrationNumber()).as("check registrationNumber").isEqualTo(expected.getRegistrationNumber())
            )
            .satisfies(a -> assertThat(a.getAttendeeId()).as("check attendeeId").isEqualTo(expected.getAttendeeId()))
            .satisfies(a -> assertThat(a.getOperatorId()).as("check operatorId").isEqualTo(expected.getOperatorId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFuelTransactionHeaderUpdatableRelationshipsEquals(
        FuelTransactionHeader expected,
        FuelTransactionHeader actual
    ) {
        // empty method
    }
}
