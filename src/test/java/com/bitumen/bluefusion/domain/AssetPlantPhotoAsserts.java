package com.bitumen.bluefusion.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AssetPlantPhotoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetPlantPhotoAllPropertiesEquals(AssetPlantPhoto expected, AssetPlantPhoto actual) {
        assertAssetPlantPhotoAutoGeneratedPropertiesEquals(expected, actual);
        assertAssetPlantPhotoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetPlantPhotoAllUpdatablePropertiesEquals(AssetPlantPhoto expected, AssetPlantPhoto actual) {
        assertAssetPlantPhotoUpdatableFieldsEquals(expected, actual);
        assertAssetPlantPhotoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetPlantPhotoAutoGeneratedPropertiesEquals(AssetPlantPhoto expected, AssetPlantPhoto actual) {
        assertThat(actual)
            .as("Verify AssetPlantPhoto auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetPlantPhotoUpdatableFieldsEquals(AssetPlantPhoto expected, AssetPlantPhoto actual) {
        assertThat(actual)
            .as("Verify AssetPlantPhoto relevant properties")
            .satisfies(a -> assertThat(a.getAssetPlantPhotoId()).as("check assetPlantPhotoId").isEqualTo(expected.getAssetPlantPhotoId()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getImage()).as("check image").isEqualTo(expected.getImage()))
            .satisfies(a -> assertThat(a.getImageContentType()).as("check image contenty type").isEqualTo(expected.getImageContentType()))
            .satisfies(a -> assertThat(a.getAssetPlantId()).as("check assetPlantId").isEqualTo(expected.getAssetPlantId()))
            .satisfies(a ->
                assertThat(a.getAssetPlantPhotoLabel()).as("check assetPlantPhotoLabel").isEqualTo(expected.getAssetPlantPhotoLabel())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssetPlantPhotoUpdatableRelationshipsEquals(AssetPlantPhoto expected, AssetPlantPhoto actual) {
        // empty method
    }
}
